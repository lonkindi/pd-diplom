openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/v1/basket:
    get:
      operationId: api_v1_basket_retrieve
      description: получить корзину
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_basket_create
      description: добавить товары в корзину
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v1_basket_update
      description: редактировать корзину
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_basket_destroy
      description: удалить товары из корзины
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/categories:
    get:
      operationId: api_v1_categories_list
      description: Класс для просмотра категорий
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /api/v1/order:
    get:
      operationId: api_v1_order_retrieve
      description: получить мои заказы
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_order_create
      description: разместить заказ из корзины
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/partner/orders/:
    get:
      operationId: api_v1_partner_orders_list
      description: Класс для получения заказов поставщиками
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: api_v1_partner_orders_create
      description: Класс для получения заказов поставщиками
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/v1/partner/orders/{id}/:
    get:
      operationId: api_v1_partner_orders_retrieve
      description: Класс для получения заказов поставщиками
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Заказ.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: api_v1_partner_orders_update
      description: Класс для получения заказов поставщиками
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Заказ.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: api_v1_partner_orders_partial_update
      description: Класс для получения заказов поставщиками
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Заказ.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: api_v1_partner_orders_destroy
      description: Класс для получения заказов поставщиками
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Заказ.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/partner/update:
    post:
      operationId: api_v1_partner_update_create
      description: Класс для обновления прайса от поставщика
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/product:
    get:
      operationId: api_v1_product_retrieve
      description: Класс для выдачи информации о товаре
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/products:
    get:
      operationId: api_v1_products_retrieve
      description: Класс для поиска товаров
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/shops:
    get:
      operationId: api_v1_shops_list
      description: Класс для просмотра списка магазинов
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shop'
          description: ''
  /api/v1/user/login:
    post:
      operationId: api_v1_user_login_create
      description: Авторизация методом POST
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/user/register:
    post:
      operationId: api_v1_user_register_create
      description: Регистрация методом POST
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 40
      required:
      - id
      - name
    Contact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          maxLength: 50
        value:
          type: string
          maxLength: 100
      required:
      - id
      - type
      - value
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ordered_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemCreate'
          readOnly: true
        state:
          $ref: '#/components/schemas/StateEnum'
        dt:
          type: string
          format: date-time
          readOnly: true
        total_sum:
          type: integer
        contact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          readOnly: true
      required:
      - contact
      - dt
      - id
      - ordered_items
      - state
      - total_sum
    OrderItemCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product_info:
          allOf:
          - $ref: '#/components/schemas/ProductInfo'
          readOnly: true
        quantity:
          type: integer
        order:
          type: integer
          writeOnly: true
      required:
      - id
      - product_info
      - quantity
    PatchedOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ordered_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemCreate'
          readOnly: true
        state:
          $ref: '#/components/schemas/StateEnum'
        dt:
          type: string
          format: date-time
          readOnly: true
        total_sum:
          type: integer
        contact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          readOnly: true
    Product:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        category:
          type: string
          readOnly: true
      required:
      - category
      - name
    ProductInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        model:
          type: string
          maxLength: 80
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        shop:
          type: integer
        quantity:
          type: integer
        price:
          type: integer
        price_rrc:
          type: integer
        product_parameters:
          type: array
          items:
            $ref: '#/components/schemas/ProductParameter'
          readOnly: true
      required:
      - id
      - price
      - price_rrc
      - product
      - product_parameters
      - quantity
    ProductParameter:
      type: object
      properties:
        parameter:
          type: string
          readOnly: true
        value:
          type: string
          maxLength: 100
      required:
      - parameter
      - value
    Shop:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
        url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        state:
          type: boolean
      required:
      - name
    StateEnum:
      enum:
      - basket
      - new
      - confirmed
      - assembled
      - sent
      - delivered
      - canceled
      type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
